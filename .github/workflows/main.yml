# Based on SwimBurgers tutorial https://swimburger.net/blog/dotnet/how-to-deploy-aspnet-blazor-webassembly-to-github-pages
name: Deploy to GitHub Pages

# Run workflow on every push to my release branch
on:
  push:
    branches: [ release ]

jobs:
  build:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
      # uses GitHub's checkout action to checkout code from the main branch
      - uses: actions/checkout@v2
      
      # sets up .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      # publishes the Blazor project to the release folder
      - name: Publish .NET Project
        run: dotnet publish TheToby1.github.io.csproj -c Release -o release --nologo
      
      # copy the CNAME file into the release folder to allow a custom domain
      - name: copy CNAME to CNAME
        run: cp CNAME release/wwwroot/CNAME

      # copy index.html to 404.html to serve the same file when a file is not found
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: main
          FOLDER: release/wwwroot
